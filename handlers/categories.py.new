from aiogram import Router, F
from aiogram.types import CallbackQuery
from keyboards.main_menu import get_subcategory_menu, get_back_to_menu
from database.db import get_session, get_category_by_slug, list_products

router = Router()

NO_PRODUCTS_TEXT = """üì≠ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –º–µ–±–µ–ª–∏.

–ù–æ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ! –ù–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–æ–≤—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏.
–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∏ —Å–º–æ—Ç—Ä–µ—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è."""


@router.callback_query(F.data.startswith("category:"))
async def handle_category_selection(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–±–µ–ª–∏"""
    category_slug = callback.data.split(":", 1)[1]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    keyboard = get_subcategory_menu(category_slug)
    if keyboard:
        await callback.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø:",
            reply_markup=keyboard
        )
        await callback.answer()
        return

    # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã
    async with get_session() as session:
        category = await get_category_by_slug(session, category_slug)
        if not category:
            await callback.message.edit_text(
                "‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                reply_markup=get_back_to_menu()
            )
            await callback.answer()
            return
            
        products = await list_products(session, category_slug=category_slug)
        if not products:
            await callback.message.edit_text(
                NO_PRODUCTS_TEXT,
                reply_markup=get_back_to_menu()
            )
        else:
            # TODO: Implement products list view
            await callback.message.edit_text(
                NO_PRODUCTS_TEXT,  # –í—Ä–µ–º–µ–Ω–Ω–æ, –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤
                reply_markup=get_back_to_menu()
            )
    await callback.answer()


@router.callback_query(F.data.startswith("subcategory:"))
async def handle_subcategory_selection(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–±–µ–ª–∏"""
    _, category_slug, subcategory = callback.data.split(":")
    
    async with get_session() as session:
        products = await list_products(session, category_slug=category_slug, subcategory=subcategory)
        if not products:
            await callback.message.edit_text(
                NO_PRODUCTS_TEXT,
                reply_markup=get_back_to_menu()
            )
        else:
            # TODO: Implement products list view
            await callback.message.edit_text(
                NO_PRODUCTS_TEXT,  # –í—Ä–µ–º–µ–Ω–Ω–æ, –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤
                reply_markup=get_back_to_menu()
            )
    await callback.answer()