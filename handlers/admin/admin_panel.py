from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters.state import StateFilter
from aiogram.fsm.context import FSMContext
from keyboards.admin_kb import get_admin_panel_kb
from keyboards.main_menu import get_main_menu
from states.admin_states import CategoryForm, FurnitureForm
from database.db import get_session
from database.models import Category, Product

router = Router()

@router.callback_query(F.data == "admin_panel")
async def show_admin_panel(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    await callback.message.edit_text(
        text="üõ† –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_panel_kb()
    )
    await callback.answer()

@router.callback_query(F.data == "admin_add_category")
async def add_category_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    await state.set_state(CategoryForm.waiting_for_name)
    await callback.message.edit_text(
        text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:",
        reply_markup=None
    )
    await callback.answer()

@router.callback_query(F.data == "admin_add_furniture")
async def add_furniture_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ–±–µ–ª–∏"""
    await state.set_state(FurnitureForm.waiting_for_category)
    # TODO: Show available categories
    await callback.message.edit_text(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ–π –º–µ–±–µ–ª–∏:",
        reply_markup=None  # TODO: Add category selection keyboard
    )
    await callback.answer()

@router.callback_query(F.data == "admin_delete_furniture")
async def delete_furniture_start(callback: CallbackQuery):
    """–ù–∞—á–∞–ª–æ —É–¥–∞–ª–µ–Ω–∏—è –º–µ–±–µ–ª–∏"""
    # TODO: Show available furniture items
    await callback.message.edit_text(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–±–µ–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
        reply_markup=None  # TODO: Add furniture selection keyboard
    )
    await callback.answer()

@router.callback_query(F.data == "admin_list_categories")
async def list_categories(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    async with get_session() as session:
        categories = await session.query(Category).all()
        
        if not categories:
            text = "üìÇ –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—É—Å—Ç"
        else:
            text = "üìÇ –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:\n\n" + "\n".join(
                f"‚Ä¢ {cat.name}" for cat in categories
            )
            
    await callback.message.edit_text(
        text=text,
        reply_markup=get_admin_panel_kb()
    )
    await callback.answer()

@router.callback_query(F.data == "admin_orders")
async def show_orders(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫"""
    # TODO: Implement orders list view
    await callback.message.edit_text(
        text="üì¶ –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫:\n\n–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
        reply_markup=get_admin_panel_kb()
    )
    await callback.answer()