from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup
from database.db import get_session, list_categories
from typing import Optional


def get_main_menu(is_admin: bool = False) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –º–µ–±–µ–ª–∏"""
    builder = InlineKeyboardBuilder()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–±–µ–ª–∏
    builder.button(text="–°–ø–∞–ª—å–Ω–∞—è –º–µ–±–µ–ª—å", callback_data="category:bedroom")
    builder.button(text="–ö—É—Ö–æ–Ω–Ω–∞—è –º–µ–±–µ–ª—å", callback_data="category:kitchen")
    builder.button(text="–ú—è–≥–∫–∞—è –º–µ–±–µ–ª—å", callback_data="category:soft")
    builder.button(text="–°—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è", callback_data="category:tables")
    builder.button(text="–¢—É–º–±—ã –∏ –∫–æ–º–æ–¥—ã", callback_data="category:cabinets")
    builder.button(text="–ö—Ä–æ–≤–∞—Ç–∏", callback_data="category:beds")
    builder.button(text="–ú–∞—Ç—Ä–∞—Å—ã", callback_data="category:mattress")
    builder.button(text="–®–∫–∞—Ñ—ã", callback_data="category:wardrobes")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
    builder.button(text="–û –∫–æ–º–ø–∞–Ω–∏–∏ / –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="about_company")
    builder.button(text="–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ", callback_data="cooperation")
    
    # –ö–Ω–æ–ø–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if is_admin:
        builder.button(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞", callback_data="admin_panel")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    builder.adjust(2)
    
    return builder.as_markup()


def get_subcategory_menu(category_slug: str) -> Optional[InlineKeyboardMarkup]:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–µ–±–µ–ª–∏"""
    builder = InlineKeyboardBuilder()
    
    if category_slug in ["bedroom", "soft", "tables"]:
        builder.button(text="üá∑üá∫ –†–æ—Å—Å–∏—è", callback_data=f"subcategory:{category_slug}:russia")
        builder.button(text="üáπüá∑ –¢—É—Ä—Ü–∏—è", callback_data=f"subcategory:{category_slug}:turkey")
    elif category_slug == "kitchen":
        builder.button(text="–ü—Ä—è–º–∞—è –∫—É—Ö–Ω—è", callback_data=f"subcategory:kitchen:straight")
        builder.button(text="–£–≥–ª–æ–≤–∞—è –∫—É—Ö–Ω—è", callback_data=f"subcategory:kitchen:corner")
    else:
        return None
        
    builder.button(text="¬´ –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.adjust(2, 1)
    
    return builder.as_markup()


def get_back_to_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    builder.button(text="¬´ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
    return builder.as_markup()
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    builder.button(text="‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏/–∫–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="about_company")
    builder.button(text="ü§ù –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ", callback_data="cooperation")
    
    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥—É
    builder.adjust(2, 2, 2, 2, 1, 1)
    
    return builder.as_markup()


def get_subcategory_menu(category_slug: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    builder = InlineKeyboardBuilder()
    
    with get_session() as session:
        # –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        from database.db import get_category_by_slug
        parent_category = get_category_by_slug(session, category_slug)
        if not parent_category:
            return get_back_to_menu()
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        subcategories = list_categories(session, parent_id=parent_category.id)
        
        if subcategories:
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            for subcategory in subcategories:
                builder.button(text=subcategory.name, callback_data=f"subcategory:{subcategory.slug}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            from database.db import list_products
            products_in_parent = list_products(session, category_id=parent_category.id)
            if products_in_parent:
                builder.button(text="üì¶ –í—Å–µ —Ç–æ–≤–∞—Ä—ã", callback_data=f"products:{category_slug}")
        else:
            # –ï—Å–ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
            from database.db import list_products
            products = list_products(session, category_id=parent_category.id)
            if products:
                builder.button(text="üì¶ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã", callback_data=f"products:{category_slug}")
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
    
    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥—É
    builder.adjust(2, 1)
    
    return builder.as_markup()


def get_products_menu(category_slug: str, page: int = 0, limit: int = 5) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()
    
    with get_session() as session:
        from database.db import get_category_by_slug, list_products
        category = get_category_by_slug(session, category_slug)
        if not category:
            return get_back_to_menu()
        
        products = list_products(session, category_id=category.id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        start_idx = page * limit
        end_idx = start_idx + limit
        page_products = products[start_idx:end_idx]
        
        for product in page_products:
            builder.button(
                text=f"üì¶ {product.title[:30]}{'...' if len(product.title) > 30 else ''}", 
                callback_data=f"product:{product.id}"
            )
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if page > 0:
            builder.button(text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è", callback_data=f"products:{category_slug}:{page-1}")
        
        if end_idx < len(products):
            builder.button(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è", callback_data=f"products:{category_slug}:{page+1}")
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        if category.parent_id:
            # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"category:{category_slug}")
        else:
            # –ï—Å–ª–∏ —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"category:{category_slug}")
    
    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 1 –≤ —Ä—è–¥—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_back_to_menu() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    return builder.as_markup()


def get_back_button(callback_data: str) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º callback_data"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=callback_data)
    return builder.as_markup()